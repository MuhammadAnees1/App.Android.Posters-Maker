package com.example.postersmaker;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.bottomsheet.BottomSheetDialogFragment;
public class EmojiFragment extends BottomSheetDialogFragment {

    private EmojiListener mEmojiListener;

    public interface EmojiListener {
        void onEmojiClick(String emojiUnicode);
    }
    public EmojiFragment() {
        // Required empty public constructor
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View view = inflater.inflate(R.layout.fragment_emoji, container, false);

        RecyclerView rvEmoji = view.findViewById(R.id.rvEmoji);

        GridLayoutManager gridLayoutManager = new GridLayoutManager(getActivity(), 7);
        rvEmoji.setLayoutManager(gridLayoutManager);
        rvEmoji.setAdapter(new EmojiAdapter());

        return view;
    }

    public void setEmojiListener(EmojiListener emojiListener) {
        mEmojiListener = emojiListener;
    }

    public class EmojiAdapter extends RecyclerView.Adapter<EmojiAdapter.ViewHolder> {
        private final int[] EMOJI_UNICODE_VALUES = {
                0x1F600, 0x1F601, 0x1F602, 0x1F603, 0x1F604, 0x1F605, 0x1F606, 0x1F607, 0x1F608, 0x1F609, 0x1F60A, 0x1F60B, 0x1F60C, 0x1F60D, 0x1F60E, 0x1F60F, 0x1F610, 0x1F611, 0x1F612, 0x1F613, 0x1F614, 0x1F615, 0x1F616, 0x1F617, 0x1F618, 0x1F619, 0x1F61A, 0x1F61B, 0x1F61C, 0x1F61D,
                0x1F61E, 0x1F61F, 0x1F620, 0x1F621, 0x1F622, 0x1F623, 0x1F624, 0x1F625, 0x1F626, 0x1F627, 0x1F628, 0x1F629, 0x1F62A, 0x1F62B, 0x1F62C, 0x1F62D, 0x1F62E, 0x1F62F, 0x1F630, 0x1F631,
                0x1F632, 0x1F633, 0x1F634, 0x1F635, 0x1F636, 0x1F637, 0x1F638, 0x1F639, 0x1F63A, 0x1F63B, 0x1F63C, 0x1F63D, 0x1F63E, 0x1F63F, 0x1F640, 0x1F641, 0x1F642, 0x1F643, 0x1F644, 0x1F645,
                0x1F646, 0x1F647, 0x1F648, 0x1F649, 0x1F64A, 0x1F64B, 0x1F64C, 0x1F64D, 0x1F64E, 0x1F64F, 0x1F680, 0x1F681, 0x1F682, 0x1F683, 0x1F684, 0x1F685, 0x1F686, 0x1F687, 0x1F688, 0x1F689,
                0x1F68A, 0x1F68B, 0x1F68C, 0x1F68D, 0x1F68E, 0x1F68F, 0x1F690, 0x1F691, 0x1F692, 0x1F693, 0x1F694, 0x1F695, 0x1F696, 0x1F697, 0x1F698, 0x1F699, 0x1F69A, 0x1F69B, 0x1F69C, 0x1F69D, 0x1F69E, 0x1F69F, 0x1F6A0, 0x1F6A1, 0x1F6A2,
                0x1F6A3, 0x1F6A4, 0x1F6A5, 0x1F6A6, 0x1F6A7, 0x1F6A8, 0x1F6A9, 0x1F6AA, 0x1F6AB, 0x1F6AC, 0x1F6AD, 0x1F6AE, 0x1F6AF, 0x1F6B0, 0x1F6B1, 0x1F6B2, 0x1F6B3, 0x1F6B4, 0x1F6B5,
                0x1F6B6, 0x1F6B7, 0x1F6B8, 0x1F6B9, 0x1F6BA, 0x1F6BB, 0x1F6BC, 0x1F6BD, 0x1F6BE, 0x1F6BF, 0x1F6C0, 0x1F6C1, 0x1F6C2, 0x1F6C3, 0x1F6C4, 0x1F6C5, 0x1F6C6, 0x1F6C7, 0x1F6C8, 0x1F6C9,
                0x1F6CA, 0x1F6CB, 0x1F6CC, 0x1F6CD, 0x1F6CE, 0x1F6CF, 0x1F6D0, 0x1F6D1, 0x1F6D2, 0x1F6D3, 0x1F6D4, 0x1F6E0, 0x1F6E1, 0x1F6E2, 0x1F6E3, 0x1F6E4, 0x1F6E5, 0x1F6E9, 0x1F6EB,
                0x1F6EC, 0x1F6F0, 0x1F6F3, 0x1F6F4, 0x1F6F5, 0x1F6F6, 0x1F6F7, 0x1F6F8, 0x1F6F9, 0x1F6FA, 0x1F6FB, 0x1F6FC, 0x1F6FD, 0x1F6FE, 0x1F6FF, 0x1F700, 0x1F701, 0x1F702, 0x1F703,
                0x1F704, 0x1F705, 0x1F706, 0x1F707, 0x1F708, 0x1F709, 0x1F70A, 0x1F70B, 0x1F70C, 0x1F70D, 0x1F70E, 0x1F70F, 0x1F710, 0x1F711, 0x1F712, 0x1F713, 0x1F714, 0x1F715, 0x1F716,
                0x1F717, 0x1F718, 0x1F719, 0x1F71A, 0x1F71B, 0x1F71C, 0x1F71D, 0x1F71E, 0x1F71F, 0x1F720, 0x1F721, 0x1F722, 0x1F723, 0x1F724, 0x1F725, 0x1F726, 0x1F727, 0x1F728, 0x1F729,
                0x1F72A, 0x1F72B, 0x1F72C, 0x1F72D, 0x1F72E, 0x1F72F, 0x1F730, 0x1F731, 0x1F732, 0x1F733, 0x1F734, 0x1F735, 0x1F736, 0x1F737, 0x1F738, 0x1F739, 0x1F73A, 0x1F73B, 0x1F73C,
                0x1F73D, 0x1F73E, 0x1F73F, 0x1F740, 0x1F741, 0x1F742, 0x1F743, 0x1F744, 0x1F745, 0x1F746, 0x1F747, 0x1F748, 0x1F749, 0x1F74A, 0x1F74B, 0x1F74C, 0x1F74D, 0x1F74E, 0x1F74F,
                0x1F750, 0x1F751, 0x1F752, 0x1F753, 0x1F754, 0x1F755, 0x1F756, 0x1F757, 0x1F758, 0x1F759, 0x1F75A, 0x1F75B, 0x1F75C, 0x1F75D, 0x1F75E, 0x1F75F, 0x1F760, 0x1F761, 0x1F762,
                0x1F763, 0x1F764, 0x1F765, 0x1F766, 0x1F767, 0x1F768, 0x1F769, 0x1F76A, 0x1F76B, 0x1F76C, 0x1F76D, 0x1F76E, 0x1F76F, 0x1F770, 0x1F771, 0x1F772, 0x1F773, 0x1F774, 0x1F775,
                0x1F776, 0x1F777, 0x1F778, 0x1F779, 0x1F77A, 0x1F77B, 0x1F77C, 0x1F77D, 0x1F77E, 0x1F77F, 0x1F780, 0x1F781, 0x1F782, 0x1F783, 0x1F784, 0x1F785, 0x1F786, 0x1F787, 0x1F788,
                0x1F789, 0x1F78A, 0x1F78B, 0x1F78C, 0x1F78D, 0x1F78E, 0x1F78F, 0x1F790, 0x1F791, 0x1F792, 0x1F793, 0x1F794, 0x1F795, 0x1F796, 0x1F797, 0x1F798, 0x1F799, 0x1F79A, 0x1F79B,
                0x1F79C, 0x1F79D, 0x1F79E, 0x1F79F, 0x1F7A0, 0x1F7A1, 0x1F7A2, 0x1F7A3, 0x1F7A4, 0x1F7A5, 0x1F7A6, 0x1F7A7, 0x1F7A8, 0x1F7A9, 0x1F7AA, 0x1F7AB, 0x1F7AC, 0x1F7AD,
                0x1F7AE, 0x1F7AF, 0x1F7B0, 0x1F7B1, 0x1F7B2, 0x1F7B3, 0x1F7B4, 0x1F7B5, 0x1F7B6, 0x1F7B7, 0x1F7B8, 0x1F7B9, 0x1F7BA, 0x1F7BB, 0x1F7BC, 0x1F7BD, 0x1F7BE, 0x1F7BF,
                0x1F7C0, 0x1F7C1, 0x1F7C2, 0x1F7C3, 0x1F7C4, 0x1F7C5, 0x1F7C6, 0x1F7C7, 0x1F7C8, 0x1F7C9, 0x1F7CA, 0x1F7CB, 0x1F7CC, 0x1F7CD, 0x1F7CE, 0x1F7CF, 0x1F7D0, 0x1F7D1, 0x1F7D2,
                0x1F7D3, 0x1F7D4, 0x1F7D5, 0x1F7D6, 0x1F7D7, 0x1F7D8, 0x1F7D9, 0x1F7DA, 0x1F7DB, 0x1F7DC, 0x1F7DD, 0x1F7DE, 0x1F7DF, 0x1F7E0, 0x1F7E1, 0x1F7E2, 0x1F7E3, 0x1F7E4, 0x1F7E5,
                0x1F7E6, 0x1F7E7, 0x1F7E8, 0x1F7E9, 0x1F7EA, 0x1F7EB, 0x1F7EC, 0x1F7ED, 0x1F7EE, 0x1F7EF, 0x1F7F0, 0x1F7F1, 0x1F7F2, 0x1F7F3, 0x1F7F4, 0x1F7F5, 0x1F7F6, 0x1F7F7, 0x1F7F8,
                0x1F7F9, 0x1F7FA, 0x1F7FB, 0x1F7FC, 0x1F7FD, 0x1F7FE, 0x1F7FF, 0x1F800, 0x1F801, 0x1F802, 0x1F803, 0x1F804, 0x1F805, 0x1F806, 0x1F807, 0x1F808, 0x1F809, 0x1F80A, 0x1F80B,
                0x1F80C, 0x1F80D, 0x1F80E, 0x1F80F, 0x1F810, 0x1F811, 0x1F812, 0x1F813, 0x1F814, 0x1F815, 0x1F816, 0x1F817, 0x1F818, 0x1F819, 0x1F81A, 0x1F81B, 0x1F81C, 0x1F81D, 0x1F81E,
                0x1F81F, 0x1F820, 0x1F821, 0x1F822, 0x1F823, 0x1F824, 0x1F825, 0x1F826, 0x1F827, 0x1F828, 0x1F829, 0x1F82A, 0x1F82B, 0x1F82C, 0x1F82D, 0x1F82E, 0x1F82F, 0x1F830, 0x1F831,
                0x1F832, 0x1F833, 0x1F834, 0x1F835, 0x1F836, 0x1F837, 0x1F838, 0x1F839, 0x1F83A, 0x1F83B, 0x1F83C, 0x1F83D, 0x1F83E, 0x1F83F, 0x1F840, 0x1F841, 0x1F842, 0x1F843, 0x1F844,
                0x1F845, 0x1F846, 0x1F847, 0x1F848, 0x1F849, 0x1F84A, 0x1F84B, 0x1F84C, 0x1F84D, 0x1F84E, 0x1F84F, 0x1F850, 0x1F851, 0x1F852, 0x1F853, 0x1F854, 0x1F855, 0x1F856, 0x1F857,
                0x1F858, 0x1F859, 0x1F85A, 0x1F85B, 0x1F85C, 0x1F85D, 0x1F85E, 0x1F85F, 0x1F860, 0x1F861, 0x1F862, 0x1F863, 0x1F864, 0x1F865, 0x1F866, 0x1F867, 0x1F868, 0x1F869, 0x1F86A,};

        @Override
        public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_emoji, parent, false);
            return new ViewHolder(view);
        }

        @Override
        public void onBindViewHolder(ViewHolder holder, int position) {
            holder.txtEmoji.setText(getEmojiByUnicode(EMOJI_UNICODE_VALUES, position));
        }

        @Override
        public int getItemCount() {
            return EMOJI_UNICODE_VALUES.length;
        }

        class ViewHolder extends RecyclerView.ViewHolder {
            TextView txtEmoji;

            ViewHolder(View itemView) {
                super(itemView);
                txtEmoji = itemView.findViewById(R.id.txtEmoji);

                itemView.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        int position = getAdapterPosition();
                        if (position != RecyclerView.NO_POSITION && mEmojiListener != null) {
                            mEmojiListener.onEmojiClick(getEmojiByUnicode(EMOJI_UNICODE_VALUES, position));
                        }
                        dismiss();
                    }
                });
            }
        }

        private String getEmojiByUnicode(int[] unicodeValues, int position) {
            return new String(Character.toChars(unicodeValues[position]));
        }
    }
}